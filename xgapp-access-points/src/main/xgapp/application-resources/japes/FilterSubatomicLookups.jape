Phase: FilterSubatomicLookups
Input: Atom Token Lookup
Options: control = once

Rule: FilterSubatomicLookups
({Lookup})
-->
{
	try {
		AnnotationSet atoms = inputAS.get("Atom");
		AnnotationSet tokens = inputAS.get("Token");
		AnnotationSet lookups = inputAS.get("Lookup");

		for (Annotation atom : atoms) {
			AnnotationSet tokensInAtom = tokens.get(atom.getStartNode().getOffset(), atom.getEndNode().getOffset());
			if (tokensInAtom.size() < 2) continue;

			AnnotationSet lookupsInAtom = lookups.get(atom.getStartNode().getOffset(), atom.getEndNode().getOffset());
			if (lookupsInAtom.isEmpty()) continue;

			boolean containsSubatomicLookups = false;
			for (Annotation token : tokens) {

				if (lookupsInAtom.get(token.getStartNode().getOffset(), token.getEndNode().getOffset()).isEmpty()) {
					containsSubatomicLookups = true;
					break;
				}
			}

			if (containsSubatomicLookups) outputAS.removeAll(lookupsInAtom);
		}
	
	} catch (Exception e) {
		throw new NonFatalJapeException(e);
	}
}
